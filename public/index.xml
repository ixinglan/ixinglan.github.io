<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>古道长亭</title>
    <link>https://blog.zhaojq.top/</link>
    <description>Recent content on 古道长亭</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 03 Jul 2020 06:19:16 +0800</lastBuildDate>
    
	<atom:link href="https://blog.zhaojq.top/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>苦咖啡</title>
      <link>https://blog.zhaojq.top/free/%E8%8B%A6%E5%92%96%E5%95%A1/</link>
      <pubDate>Fri, 03 Jul 2020 06:19:16 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/free/%E8%8B%A6%E5%92%96%E5%95%A1/</guid>
      <description>以前喝各种口味的饮料,饮品,感觉不带点甜,喝不下去
后来,改喝茶,觉得微苦的感觉很好
再后来,喜欢上了苦咖啡
而这种味道,是开始时相当不能承受的
这种改变的原因是什么,年龄的成长? 生活的五味杂陈? 或许都有吧!</description>
    </item>
    
    <item>
      <title>Java14安装</title>
      <link>https://blog.zhaojq.top/tecs/java14%E5%AE%89%E8%A3%85/</link>
      <pubDate>Fri, 19 Jun 2020 09:02:17 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/java14%E5%AE%89%E8%A3%85/</guid>
      <description>jdk最新版本 截止目前,jdk版本已经更新到14
jdk14新特性 https://openjdk.java.net/projects/jdk/14/ &amp;ndash;openjdk网站我们可以看到有以下16大特性
305:	Pattern Matching for instanceof (Preview) 343:	Packaging Tool (Incubator) 345:	NUMA-Aware Memory Allocation for G1 349:	JFR Event Streaming 352:	Non-Volatile Mapped Byte Buffers 358:	Helpful NullPointerExceptions 359:	Records (Preview) 361:	Switch Expressions (Standard) 362:	Deprecate the Solaris and SPARC Ports 363:	Remove the Concurrent Mark Sweep (CMS) Garbage Collector 364:	ZGC on macOS 365:	ZGC on Windows 366:	Deprecate the ParallelScavenge + SerialOld GC Combination 367:	Remove the Pack200 Tools and API 368:	Text Blocks (Second Preview) 370:	Foreign-Memory Access API (Incubator)  下面我们就常用到的特性改变举例看一下</description>
    </item>
    
    <item>
      <title>Linux 使用别名免密ssh连接</title>
      <link>https://blog.zhaojq.top/tecs/linux%E8%BF%9C%E7%A8%8Bssh%E4%BD%BF%E7%94%A8%E5%88%AB%E5%90%8D%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</link>
      <pubDate>Wed, 17 Jun 2020 00:02:17 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/linux%E8%BF%9C%E7%A8%8Bssh%E4%BD%BF%E7%94%A8%E5%88%AB%E5%90%8D%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95/</guid>
      <description>服务器ip地址 假设有3台服务器server1,server2,server3, IP地址信息如下 * server1 101.200.1.1(公网) 192.168.1.1(内网) * server2 201.200.1.1(公网) 192.168.1.2(内网) * server3 301.200.1.1(公网) 192.168.1.3(内网)
我们假设3台服务器属于同一个内网(当然可以通过公网ip配置),接下来,我们配置服务器之间的别名免密登录
配置别名 未配置之前我们通过ssh连接远程服务器的命令是这样的
ssh user@host #然后按提示输入密码  在个人用户目录下进入.ssh隐藏目录,如果没有config配置文件的话,使用touch config创建一个
vim config #打开配置文件, 配置如下信息 Host server1 #别名 HostName 192.168.1.1 #ip地址,我们这里使用内网ip User root #目标服务器用户名,我们这里使用root用户 IdentitiesOnly yes #固定写法 Host server2 HostName 192.168.1.2 User root IdentitiesOnly yes Host server3 HostName 192.168.1.3 User root IdentitiesOnly yes  这时候我们只需要 ssh server1这样就可以连接了,省去了输入用户名和ip地址,但这时候仍然会提示输入密码,这是我们不好记忆的
配置免密登录 在每台服务器下生成rsa 公钥和私钥 ssh-keygen -t rsa #生成密钥命令,然后一路enter键就行 Generating public/private rsa key pair.</description>
    </item>
    
    <item>
      <title>Let&#39;s Encrypt SSL证书ocsp域名无法访问解决办法</title>
      <link>https://blog.zhaojq.top/tecs/ocsp%E5%9F%9F%E5%90%8D%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E9%97%AE%E9%A2%98/</link>
      <pubDate>Fri, 15 May 2020 09:27:52 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/ocsp%E5%9F%9F%E5%90%8D%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E9%97%AE%E9%A2%98/</guid>
      <description>不少公司会用Let&amp;rsquo;s Encrypt 免费ssl证书, 但由于国内无法访问其ocsp域名,会导致不能签发证书、OCSP Stapling 失败、ios内置H5页面及网页打开缓慢等问题
针对这个问题,有以下两种解决办法:
1.切换http,但当下https普及的情况下,不推荐
2.购买SSL证书,可根据访问量及其他综合考虑购买对应证书
3.本地修改hosts的方案进行临时处理,但不是长久方案,不稳定 在/etc/hosts中添加
23.32.3.72 ocsp.int-x3.letsencrypt.org  获取ocsp响应
openssl ocsp -no_nonce \ -respout /path/to/certs/holmesian.org/ocsp_res.der \ -issuer /path/to/certs/holmesian.org/ca.cer \ -cert /path/to/certs/holmesian.org/holmesian.org.cer \ -url http://ocsp.int-x3.letsencrypt.org/ \ -header &amp;quot;HOST&amp;quot; &amp;quot;ocsp.int-x3.letsencrypt.org&amp;quot; #-cert 、 -issuer 、 -CAfile 分别对应的是子证书、中间证书、根证书，其实全部使用 acme.sh 文件夹中的 fullchain.cer 也是可以的 #-respout 是 OCSP 响应保存位置，将这个位置填入在 nginx 配置文件的 ssl_stapling_file 中，如下开启ssl_stapling  这里如果出现如下错误的话，说明你的openssl使用了1.1.0版本，这个时候已经不需要指定HOST，把上面命令中的“-header &amp;ldquo;HOST&amp;rdquo; &amp;ldquo;ocsp.int-x3.letsencrypt.org&amp;rdquo;”删掉就好了
ssl_stapling on; ssl_stapling_verify on; ssl_stapling_file /root/.acme.sh/*.holmesian.org_ecc/ocsp_res.der;  重载nginx服务后,检查是否开启
openssl s_client -connect holmesian.org:443 -status -tlsextdebug &amp;lt; /dev/null 2&amp;gt;&amp;amp;1 | grep -i &amp;quot;OCSP response&amp;quot;  如果显示successful,则代表成功,可以将期制成脚本,加到crontab中自动执行</description>
    </item>
    
    <item>
      <title>redis作接口缓存及避坑</title>
      <link>https://blog.zhaojq.top/tecs/redis%E5%BA%8F%E5%88%97%E5%8C%96%E9%81%BF%E5%9D%91/</link>
      <pubDate>Fri, 15 May 2020 08:27:52 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/redis%E5%BA%8F%E5%88%97%E5%8C%96%E9%81%BF%E5%9D%91/</guid>
      <description>用redis作接口缓存 1.引入依赖
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-data-redis&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt;  2.application.yml里配置cache
spring: redis: database: 0 host: 127.0.0.1 port: 8379 cache: type: redis expire: 1800 #超时时间,单位秒  3.启动类添加 @EnableCaching 注解开启缓存 4.自定义redis序列化机制
import com.fasterxml.jackson.annotation.JsonTypeInfo; import com.fasterxml.jackson.databind.DeserializationFeature; import com.fasterxml.jackson.databind.ObjectMapper; import com.fasterxml.jackson.databind.SerializationFeature; import com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator; import com.fasterxml.jackson.datatype.jsr310.JavaTimeModule; import org.springframework.context.annotation.Bean; import org.springframework.context.annotation.Configuration; import org.springframework.context.annotation.Primary; import org.springframework.data.redis.connection.RedisConnectionFactory; import org.springframework.data.redis.core.RedisTemplate; import org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer; import org.springframework.data.redis.serializer.RedisSerializer; import org.springframework.data.redis.serializer.StringRedisSerializer; @Configuration public class RedisConfig { /** * 自定义redis序列化的机制,重新定义一个ObjectMapper.防止和MVC的冲突 * * @return */ @Primary @Bean public RedisSerializer&amp;lt;Object&amp;gt; redisSerializer() { ObjectMapper objectMapper = new ObjectMapper(); //反序列化时候遇到不匹配的属性并不抛出异常 objectMapper.</description>
    </item>
    
    <item>
      <title>Mac安全的删文件</title>
      <link>https://blog.zhaojq.top/tecs/mac%E5%AE%89%E5%85%A8%E7%9A%84%E5%88%A0%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 22 Apr 2020 10:04:17 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/mac%E5%AE%89%E5%85%A8%E7%9A%84%E5%88%A0%E6%96%87%E4%BB%B6/</guid>
      <description>Mac 像Linux一样使用命令行是很便利的, 但是在使用命令行的时候, rm -rf 命令是很常用的.
rm -rf 是一个可怕的命令, 可以理解为递归删除, 如果执行的是rm -rf /* ,那么你的系统会迅速的土崩瓦解, 尽管有些文件可能因为系统权限不足删不掉, 但是在文件丢失甚至系统不能使用的道路上,你成功了. 经常流传的程序员删库跑路, 即是执行了此命令.
当然一个正常人是不会随便乱执行这个命令的, 但有时候, 常在河边走, 总有湿鞋时, 小心又小心, 还是会因为手抖执行错.
我最近就遇到过一次, 我把mac的命令行模式切换成了 zsh, 我们知道,切换为zsh后(忘了原生的是不是), 个人文件夹的根路径就会变成 ~, 即如果执行 cd ~ 或 cd ~/ 都会跳转到个人目录.
直到前几天, 我下载了一个开源权限框架做一个小东西,使用它的代码生成工具, 可能是因为路径设置问题, 在我的某个指定文件夹下, 竟然又生成了一个~的目录, 心想 rm -rf ~是相对路径删除,应该没事, 于是我痛快的按了enter键, 但是可怕的事发生了, 这个文件夹没有消失, 命令行列表显示我个人文件夹下的文件被清掉的记录, 迅速的按下control+c&amp;hellip;&amp;hellip;
可以想象到的事发生了, 我是习惯把公司的代码, 个人代码及所有个人文件都放~目录下的人, 是的, 我的所有文件几乎全被删了, 值得庆幸的是执行的不是 rm -rf /*, 但尽管只是个人目录,带来的麻烦很大, 我长时间辛苦整理的资料, 文件等,全没了&amp;hellip;..
还能怎么样, 就这样认了, 重新整理吧&amp;hellip;..
但是如何继续避免这样的事再次发生呢, 我找到了如下解决方案
 安装rmtrash</description>
    </item>
    
    <item>
      <title>雨中漫步</title>
      <link>https://blog.zhaojq.top/free/%E9%9B%A8%E4%B8%AD%E6%BC%AB%E6%AD%A5/</link>
      <pubDate>Sun, 19 Apr 2020 13:19:16 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/free/%E9%9B%A8%E4%B8%AD%E6%BC%AB%E6%AD%A5/</guid>
      <description>怎么也不会想到,因为疫情的影响,从过年放假一直到现在,在家里被待了这么久;
好不容易养成的跑步习惯,快荒废了&amp;hellip;..
转眼间,春天也快要过去了, 趁着周末, 赶着春天的小尾巴, 溜到了奥森, 跑了一圈,
好久不跑,有点吃力;
犹记得上次来这儿跑步还是2020年的1月1日, 那时候奥森被白雪覆盖着, 现在已
春色盎然;
疫情啊, 快点过去吧&amp;hellip;&amp;hellip;
以下是我随手拍的几张景色, 哦对了, 去的时候,竟然漂起了小雨,在结束的时候还看到了彩虹,
生活的美景真是无处不在</description>
    </item>
    
    <item>
      <title>如何快速在linux成功安装nginx</title>
      <link>https://blog.zhaojq.top/tecs/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%9C%A8linux%E6%88%90%E5%8A%9F%E5%AE%89%E8%A3%85nginx/</link>
      <pubDate>Fri, 17 Apr 2020 16:27:52 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E5%9C%A8linux%E6%88%90%E5%8A%9F%E5%AE%89%E8%A3%85nginx/</guid>
      <description>​ 安装nginx的教程很多,有时候跟着走着走着就走不通了, 这就像一千个读者就有一千个哈姆雷特一样,一千个人就有一千种系统环境,就有一千种步骤. 眼花缭乱的博客有时是不是很头疼,那就自己整理一份吧.
​ 这篇文章我们不谈论很多参数的调优,如果不是大型系统的话,默认的配置,跑起来也毫无感觉. 本文我们仅谈如何快速成功在linux系统安装nginx,让你的ngin运行起来.以下即是安装步骤:
安装nginx 一.安装编译工具及库文件 ​ 如果是新系统,则下面这些必须安装,如果不是,则你有可能安装过了,安装过了也无所谓,会覆盖;
yum -y install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel  二.安装pcre 让nginx⽀持rewrite功能&amp;ndash;可以不安装 ​ rewrite功能一般也用不着,所以这个可以不安装
1. cd /usr/local/src/ 2. wget http://downloads.sourceforge.net/project/pcre/pcre/8.35/pcre- 8.35.tar.gz #可去官网找最新稳定版 3. tar zxvf pcre-8.35.tar.gz 4. cd pcre-8.35 5. ./configure 6. make &amp;amp;&amp;amp; make install 7. pcre-config --version #显示版本即成功  三.安装nginx ​ 一般我们最好把nginx安装到/usr/local目录下,如果严格按照我的步骤不报错,那么恭喜安装成功了
1. cd /usr/local/src 2. wget http://nginx.org/download/nginx-1.16.1.tar.gz --最新稳定版 3. tar zxvf nginx-1.16.1.tar.gz 4. cd nginx-1.</description>
    </item>
    
    <item>
      <title>北方小年</title>
      <link>https://blog.zhaojq.top/free/%E5%8C%97%E6%96%B9%E5%B0%8F%E5%B9%B4/</link>
      <pubDate>Fri, 17 Jan 2020 19:00:39 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/free/%E5%8C%97%E6%96%B9%E5%B0%8F%E5%B9%B4/</guid>
      <description>好久不写文章了,下决心搭了个博客,但慢慢懒得写了,看来习惯养成真的是一件不容易的事.所以有时候不要羡慕别人获得的成就,为什么自己就没有, 其中背后的坚持与辛酸,没有经历过的人是体会不到的,至少我还没有体会到.
时间过得飞快,不知不觉得今天已是小年了,常说过了小年就是年,离过年也不远了,在此为即将过去的猪年致敬,有收获也有失去,为即将来临的鼠年贺彩, 希望在新的一年里,再有所成长.
小时候的这时候,早早就盼着敬了灶王爷后吃糖瓜了,如下图所示,是一种用糯米制成的食物,特别好吃,比糖好吃. 而长大后的现在,还在工作,当年的那种期望与快乐,只能在回忆中体会了,长大,真的是一件不好的事.
还有蒸燕,山西的同志应该更有体会,面食制成的燕子啊,各种小动物啊,不仅好看,更是一种美食.
世界变得太快了,等等这些东西,都成了80,90后的回忆了,那种土生土味的年味,越来越淡了.
不知是世界变化的太快,还是自己长大了,我想,应该是自己长大了,越长大,时间过的越快,从而感觉世界也变化的快了.
一直还童心未泯,却马上要而立之年,当年那个骗我说考上中学就很轻松,考上高中就很轻松,考上大学就很轻松,大学毕业后就很轻松自由的人出来,原来那段时间才是人生最美的时光啊,没有争斗,没有利益的驱使&amp;hellip;
岁月的长河涓涓流淌,不管怎样,生活还是不乏向往与美好,愿来年,继续坚持锻炼,继续保持好心态,继续挣钱,给家人,爱人好的生活,给社会力所能及的奉献,愿人人万事如意,心想事成!</description>
    </item>
    
    <item>
      <title>脆弱的坚强</title>
      <link>https://blog.zhaojq.top/free/%E8%84%86%E5%BC%B1%E7%9A%84%E5%9D%9A%E5%BC%BA/</link>
      <pubDate>Wed, 27 Nov 2019 14:36:17 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/free/%E8%84%86%E5%BC%B1%E7%9A%84%E5%9D%9A%E5%BC%BA/</guid>
      <description>高以翔倒了 今天的新闻,艺人高以翔被爆在录制浙江卫视综艺节目《追我吧》时晕倒.
有现场网友称,高以翔曾心跳停止3分钟,经过十多分钟的心肺复苏抢救后,送往医院进一步救治.后经纪公司证实,高以翔抢救无效去世,处仅35岁.
随后,《追我吧》节目组也发表声明,声明称,高以翔奔跑时突然减速倒地,节目现场医护人员第一时间展开救治,并紧急将其送往医院.经过两个多小时的全力抢救,医院最终宣布高以翔心源性猝死.
生存与离去的间隔,比一张纸还薄,不分明星还是普通人,不分高低,先让我们启愿逝者在另一个世界永远快乐吧!
你是否不得已坚持 人们一直没有停止追求幸福的道路,如今社会,相当一部分人过上了不错的生活,但是还是有相当一些人仍然挣扎在生存线上,不得已坚持,甚至有些人幸福的背后,是否有人也在不得已坚持,给你带来幸福,比如你的父亲,你的&amp;hellip;&amp;hellip;种种生活压力,一刻也不敢松懈. 有的人的离开是不得已的坚持!
那些甘愿奉献的人 突然想起来一件事,今年早些时候,一位老师天天在微信运动上给点赞,那是我的高复班主任,一位认真负责,无私奉献的老师.
心想老师心态不错,想想毕业已有8年有余,工作生活的快节奏,一直没能在回去的几天里去看看老师,总是想着下一次时间充足了&amp;hellip;&amp;hellip;
然而,忽然一天,在一个同学转发的个人悼念文章上看到了老师离开的消息,瞬间泪目,8年前的一幕幕显现眼前.
老师很高大,一米九以上,身材魁梧,谈吐豪爽,当时带我们高复,责任重大,自己带两个科目,把被子搬到了教室旁边的一个简陋办公室,天天住那儿,方便上课,方便同学们请教问题,晚上天天备课,钻研问题到半夜,一天睡不到4个小时,冬天的寒风打不倒他,夏天的闷热毫不在乎,一切为了我们这些学子的前途&amp;hellip;&amp;hellip;
如此坚强的人,却如此的脆弱!8年后,悄然的离去了,那些点赞,或许是留给我们的最后一丝鼓励!
有的人的离去是甘愿奉献的,很自豪曾经有这么一位老师传授我知识,教育我做人,我们也应把奉献精神传承下去!
幸福的权利 成年人的道路,无容易可言,但是幸福应该是每个人的权利,而拥有幸福的基础就是健康,前进的道路上,再忙碌也别忘了小憩片刻,别忘了爱惜自己的身体,别忘了有好多人不想失去你.
愿每个人健康,幸福,快乐!</description>
    </item>
    
    <item>
      <title>如何使用Gitbook搭建个人文档</title>
      <link>https://blog.zhaojq.top/tecs/gitbook/</link>
      <pubDate>Wed, 27 Nov 2019 09:41:50 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/gitbook/</guid>
      <description>GitBook的使用相较之下还是比较的简单,插件也相对丰富
安装node.js(使用homebrew安装即可) node -v #v12.12.0  安装gitbook $ npm install gitbook-cli -g  检验安装 gitbook -V # CLI version: 2.3.2 # GitBook version: 3.2.3  创建目录 test-gitbook cd test-gitbook gitbook init # 可以看到多了README.md SUMMARY.md 两个文件  编辑summary.md # Summary * [前言](README.md) * [JAVA技术](Chapter1/README.md) * [GO技术](Chapter2/README.md) * [深入理解JVM](Chapter3/README.md) * [算法知识](Chapter4/README.md) * [SPRING系列](Chapter5/README.md) * [Spring](Chapter5/Spring.md) * [SpringBoot](Chapter5/SpringBoot.md) * [SpringCloud](Chapter5/SpringCloud.md) * [DOCKER](Chapter6/README.md) * [NETTY](Chapter7/README.md)  生成网页并启动gitbook gitbook serve # 通过http://localhost:4000即可访问  如图所示,就是我们刚创建的目录</description>
    </item>
    
    <item>
      <title>大风起兮气清朗</title>
      <link>https://blog.zhaojq.top/free/%E5%A4%A7%E9%A3%8E%E8%B5%B7%E5%85%AE%E6%B0%94%E6%B8%85%E6%9C%97/</link>
      <pubDate>Mon, 25 Nov 2019 20:39:46 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/free/%E5%A4%A7%E9%A3%8E%E8%B5%B7%E5%85%AE%E6%B0%94%E6%B8%85%E6%9C%97/</guid>
      <description>昨日寒风的扑面,时至今日都觉得大脑像冰冻了一样,借着稍有清醒,记录下昨天的美景与收获.
连续数日的雾霾,呼吸一口新鲜空气都成了一种奢侈,心情未免有些压抑,北京的冬天,也就只有大风起的时候,天朗气清,蓝天白云.
纵使冷得有些刺骨,但我还是不想错过这珍贵的日光,更甚,为了跑步方便,仅穿着一个单薄的秋衣,也未穿秋裤,即踏上了奥森的步伐.
秋有秋的金黄,冬有冬的清爽,每一种景色都有各自的别致,以下即是初冬的景象,等到雪花挂满枝头,应该会有另一番景象.
跑步不只是身体耐力的一种锻炼,也是一种人生的自我的思考与成长.当寒风扑面,瑟瑟发抖时,迎面而来一个仍然穿着短裤短袖的,当我觉得我跑得挺快时,一个女生轻松的大步超越你,逐渐的看不到了背影&amp;hellip;&amp;hellip;他们为什么不怕冷,为什么跑得快?因为人家跑得多,坚持的久.
这正如人生,正如生活,当你碰到困难,是否去坚持克服,未曾放弃;当你感觉自己已经很不错的情况下,任何时候都会有比你厉害的,比你强的,山外青山楼外楼,唯有不断努力,才能走在最前.
在跑步中去看别人的人生,思考自己的人生,是不是自己还不够努力,是否仍未鼓足勇气.
如此一想,也便不冷了,也便不累了,初次超越10Km,谨此记念一下.
​ &amp;mdash;记奥体10公里跑</description>
    </item>
    
    <item>
      <title>已是秋末</title>
      <link>https://blog.zhaojq.top/free/%E5%B7%B2%E6%98%AF%E7%A7%8B%E6%9C%AB/</link>
      <pubDate>Tue, 12 Nov 2019 23:33:14 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/free/%E5%B7%B2%E6%98%AF%E7%A7%8B%E6%9C%AB/</guid>
      <description>连续好几周周末来奥林匹克公园跑步了,跑步的人很多,散步的人很多,已至深秋,来看落叶的人也很多,金黄的落叶铺满地,十分的美丽,忍不住拍了几张,分享给大家看看,大自然的美丽对于没有文字功底的人,暂且拿相机先记录记录吧.
按照节气来看,今天正好是立冬,代表着秋的结束,秋去冬至,寒来暑往,不经意间,时间就如此的远去了,一直以为自己还是个孩子,倏忽间就长大了&amp;hellip;
今年秋天,还算是留下一点点记忆,多少岁月,在两点一线中度过,公司,家里,公司,家里,,,忙碌中抽点时间出来真的是不容易,多出去走走吧,去感受一下大自然的美丽,趁芳华依在.
​ &amp;mdash;记立冬奥体跑步</description>
    </item>
    
    <item>
      <title>个性化个人博客网站</title>
      <link>https://blog.zhaojq.top/tecs/hugo2/</link>
      <pubDate>Thu, 07 Nov 2019 16:07:53 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/hugo2/</guid>
      <description>GitHub Pages绑定到自己的域名  申请个人域名,完成备案,比如,我将我的二级域名 blog.zhaojq.top 添加一个CNAME解析到https://{username}.github.io 在GitHub账户工程 Settings/GitHub Pages /Custom domain处填写自己的域名信息 即可通过 https://blog.zhaojq.top 访问自己的个人博客  如何修改主题模板 常用的主题形式一般是固定死的,我们想添加一些模块等的时候,并不能达到我们想要的效果,那么如何来修改主题模板呢?
以我个人使用的主题举例说明
https://github.com/vaga/hugo-theme-m10c  配置文件配置 我们发现,基本每个主题下都有目录exampleSite或者其他处可以找到*.toml配置文件示例,我们只要参照此配置文件配置我们主目录下的config.toml文件即可
增加模块 我发现这个主题只支持一个模块,即只有首页,这时我们就得查找Hugo官方文档,是英文的,凑合理解吧
[menu] [[menu.main]] name = &amp;quot;首页&amp;quot; weight = 1 identifier = &amp;quot;首页&amp;quot; url = &amp;quot;/posts/&amp;quot; title = &amp;quot;首页&amp;quot; [[menu.main]] name = &amp;quot;技术&amp;quot; weight = 2 identifier = &amp;quot;技术&amp;quot; url = &amp;quot;/tecs/&amp;quot; title = &amp;quot;技术分享&amp;quot; [[menu.main]] name = &amp;quot;技术系列&amp;quot; weight = 3 identifier = &amp;quot;系列&amp;quot; url = &amp;quot;/books/&amp;quot; title = &amp;quot;技术系列&amp;quot; [[menu.</description>
    </item>
    
    <item>
      <title>如何用hugo搭建一个个人博客网站</title>
      <link>https://blog.zhaojq.top/tecs/hugo1/</link>
      <pubDate>Thu, 07 Nov 2019 15:43:59 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/hugo1/</guid>
      <description>准备工作  安装homebrew(可参考mac常用配置文章)
 安装go环境(可通过homebrew安装)
 Github账号(用来托管静态页面)
  环境的安装 安装Hugo 安装hugo有两种方式,二进制安装和源代码模式,这里推荐使用二进制模式,直接通过homebrew即可安装
brew install hugo  安装完成后通过以下命令查看
brew list  如果有Hugo,即代表安装成功
生成一个站点 cd ~/ # 进入到个人目录下 hugo new site test-blog # 生成一个名为test-blog的站点  如图进入test-blog目录,我们看到站点目录结构如下,我们只关注有注释的目录即可
&amp;gt;archetypes &amp;gt;content #静态页面目录 &amp;gt;data &amp;gt;layouts &amp;gt;static #静态文件目录 &amp;gt;thems #主题目录 -config.toml#配置文件  创建页面 页面都必须生成在content目录下,如果有多个模块,可创建多个文件夹
这里举例生成两个模块
hugo new a/a.md hugo new b/b.md  如下:
我设置a/a.md title为test-A,内容随便写 --- title: &amp;quot;test-A&amp;quot; date: 2019-11-26T17:48:47+08:00 draft: true --- * a * b * c .</description>
    </item>
    
    <item>
      <title>mac常用配置</title>
      <link>https://blog.zhaojq.top/tecs/mac/</link>
      <pubDate>Wed, 06 Nov 2019 00:08:17 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/tecs/mac/</guid>
      <description>个人笔电的选择 如果你是一个java程序员,那么你肯定用过Eclipse 和 Intellij IDEA, Mac 之于Windows,就像idea之于eclipse, mac设计的美观性,系统的流畅度,环境的整洁,应用的管理,友好的操作&amp;hellip;..绝对会让你迷上它.
如何配置一台适合开发使用的mac 这里我只介绍一些关键性配置
触发角 在系统偏好设置/桌面与屏幕保护程序/屏幕保护程序 菜单下,会有触发角的设置,即鼠标快速移动到屏幕四个角,可以触发不同的操作,比如,关闭屏幕,调度中心,启动台,程序窗口等,可以快速的帮助你进行一系统方便的操作.
zsh mac的终端是默认是bash,但zsh才是一个更加强大的命令行工具
切换到bash: chsh -s /bin/bash  切换到zsh chsh -s /bin/zsh  Oh my zsh zsh具有强大的可定制的特点，支持许多插件,补全功能也强大很多.但是却配置起来十分的麻烦，但有了oh-my-zsh之后，一切变得简单起来了
 安装 oh my zsh  首先切换到zsh,以下命令由于是国外链接,有时会显示失败,多尝试或者切换网络再尝试
$ sh -c &amp;quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&amp;quot;   配置主题
vim ~/.zshrc   主题选择可以从这里选择,直接覆盖配置文件名字即可
https://github.com/ohmyzsh/ohmyzsh/wiki/Themes  Homebrew Homebrew 可以理解为命令行应用管理软件,就像你能看得见的appStore一样,只不过它是通过命令行管理的
 安装homebrew,同oh my zsh一样,如果失败,切换网络或者多次尝试即可
/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;  查找软件
brew search ***   这时会有Formulae和Casks两种类型,Formulae是一些常用包,比如java,python,go等安装包, cask是软件</description>
    </item>
    
    <item>
      <title>[非原创]背影 作者:朱自清</title>
      <link>https://blog.zhaojq.top/free/%E8%83%8C%E5%BD%B1/</link>
      <pubDate>Thu, 31 Oct 2019 17:12:01 +0800</pubDate>
      
      <guid>https://blog.zhaojq.top/free/%E8%83%8C%E5%BD%B1/</guid>
      <description>&amp;emsp;&amp;emsp;朱自清的背影一直是我喜欢的一篇文章,故收录在这儿.
&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;&amp;emsp;背影 作者:朱自清
&amp;emsp;&amp;emsp;我与父亲不相见已二年余了，我最不能忘记的是他的背影。那年冬天，祖母死了，父亲的差使也交卸了，正是祸不单行的日子，我从北京到徐州，打算跟着父亲奔丧回家。到徐州见着父亲，看见满院狼藉的东西，又想起祖母，不禁簌簌地流下眼泪。父亲说，“事已如此，不必难过，好在天无绝人之路！”
&amp;emsp;&amp;emsp;回家变卖典质，父亲还了亏空；又借钱办了丧事。这些日子，家中光景很是惨淡，一半为了丧事，一半为了父亲赋闲。丧事完毕，父亲要到南京谋事，我也要回北京念书，我们便同行。
&amp;emsp;&amp;emsp;到南京时，有朋友约去游逛，勾留了一日；第二日上午便须渡江到浦口，下午上车北去。父亲因为事忙，本已说定不送我，叫旅馆里一个熟识的茶房陪我同去。他再三嘱咐茶房，甚是仔细。但他终于不放心，怕茶房不妥帖；颇踌躇了一会。其实我那年已二十岁，北京已来往过两三次，是没有甚么要紧的了。他踌躇了一会，终于决定还是自己送我去。我两三回劝他不必去；他只说，“不要紧，他们去不好！”
&amp;emsp;&amp;emsp;我们过了江，进了车站。我买票，他忙着照看行李。行李太多了，得向脚夫行些小费，才可过去。他便又忙着和他们讲价钱。我那时真是聪明过分，总觉他说话不大漂亮，非自己插嘴不可。但他终于讲定了价钱；就送我上车。他给我拣定了靠车门的一张椅子；我将他给我做的紫毛大衣铺好坐位。他嘱我路上小心，夜里警醒些，不要受凉。又嘱托茶房好好照应我。我心里暗笑他的迂；他们只认得钱，托他们直是白托！而且我这样大年纪的人，难道还不能料理自己么？唉，我现在想想，那时真是太聪明了！
&amp;emsp;&amp;emsp;我说道，“爸爸，你走吧。”他望车外看了看，说，“我买几个橘子去。你就在此地，不要走动。”我看那边月台的栅栏外有几个卖东西的等着顾客。走到那边月台，须穿过铁道，须跳下去又爬上去。父亲是一个胖子，走过去自然要费事些。我本来要去的，他不肯，只好让他去。我看见他戴着黑布小帽，穿着黑布大马褂，深青布棉袍，蹒跚地走到铁道边，慢慢探身下去，尚不大难。可是他穿过铁道，要爬上那边月台，就不容易了。他用两手攀着上面，两脚再向上缩；他肥胖的身子向左微倾，显出努力的样子。这时我看见他的背影，我的泪很快地流下来了。我赶紧拭干了泪，怕他看见，也怕别人看见。我再向外看时，他已抱了朱红的橘子望回走了。过铁道时，他先将橘子散放在地上，自己慢慢爬下，再抱起橘子走。到这边时，我赶紧去搀他。他和我走到车上，将橘子一股脑儿放在我的皮大衣上。于是扑扑衣上的泥土，心里很轻松似的，过一会说，“我走了；到那边来信！”我望着他走出去。他走了几步，回过头看见我，说，“进去吧，里边没人。”等他的背影混入来来往往的人里，再找不着了，我便进来坐下，我的眼泪又来了。
&amp;emsp;&amp;emsp;近几年来，父亲和我都是东奔西走，家中光景是一日不如一日。他少年出外谋生，独力支持，做了许多大事。那知老境却如此颓唐！他触目伤怀，自然情不能自已。情郁于中，自然要发之于外；家庭琐屑便往往触他之怒。他待我渐渐不同往日。但最近两年的不见，他终于忘却我的不好，只是惦记着我，惦记着我的儿子。我北来后，他写了一信给我，信中说道，“我身体平安，惟膀子疼痛利害，举箸提笔，诸多不便，大约大去之期不远矣。”我读到此处，在晶莹的泪光中，又看见那肥胖的，青布棉袍，黑布马褂的背影。唉！我不知何时再能与他相见！</description>
    </item>
    
  </channel>
</rss>